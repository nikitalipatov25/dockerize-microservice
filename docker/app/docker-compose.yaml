version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  postgres-citizens:
    image: postgres:latest
    container_name: postgres-citizens
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=citizens
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5431:5431"
    restart: unless-stopped
    networks:
      - mynet
  postgres-cars:
    image: postgres:latest
    container_name: postgres-cars
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=cars
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - mynet
# APP*****************************************
  citizens:
    image: docker.io/library/citizens:0.0.1-SNAPSHOT
    container_name: citizens
#    ports:
#      - 8081:8081
    restart: unless-stopped
    depends_on:
      - postgres-citizens
      - gateway
      - kafka
    networks:
      - mynet
  cars:
    image: docker.io/library/cars:0.0.1-SNAPSHOT
    container_name: cars
#    ports:
#      - 8082:8082
    restart: unless-stopped
    depends_on:
      - postgres-cars
      - gateway
      - kafka
    networks:
      - mynet
  gateway:
    image: docker.io/library/gateway:0.0.1-SNAPSHOT
    container_name: gateway
    ports:
      - 8080:8080
    restart: unless-stopped
    networks:
      - mynet

volumes:
  postgres-data:

networks:
  mynet:
    driver: bridge
